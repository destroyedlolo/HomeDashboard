#!../Selene/Selene --dfb:quiet,no-vt
-- HomeDashBoard, Selenite version
--
-- This tool is configured for my own usage and is matching my home configuration
-- but it should be took as example to build your own dashboard

-- Ensure we're not using obsolete version
assert( SELENE_VERSION >= 0.0201, "HDB requires at least Selene v0.0200" )

-- Load configuration file
require (SELENE_SCRIPT_DIR .. "/HDB_Config")

-- Broker initialisation stuffs
local Brk, err = SelMQTT.connect( MQTT_URL, { reliable=false, ClientID=MQTT_ClientID } )

-- Broker's stuffs

function rcvTConso( topic, val )	-- Receiving temperature
	SelShared.set('EConsommation', val)
	return true
end

function updateConso()
print('ok')
	srf:SetFont( fdigit )
	srf:SetColor( 0x10,0x10,0x10,0x10 )	-- Erase previous message
	srf:FillRectangle( 200,70, fdigit:StringWidth("XXXX VA"), fdigit:GetHeight() )
	srf:SetColor( 0x80, 0xff, 0x80, 0xff )
	srf:DrawString(SelShared.get('EConsommation') .. " VA", 200,70)
end

_, err = Brk:subscribe( { 
	{ topic = "TeleInfo/Consommation/values/PAPP", func=rcvTConso, trigger=updateConso, trigger_once=true }
})
if err then
	print( err )
	return
end

-- Init the screen
Selene.init( Selene.CooperativeConst('FULLSCREEN') )
srf = SelSurface.create { caps=SelSurface.CapabilityConst('PRIMARY') } -- create a primary surface
local w,h = srf:GetSize()	-- Retrieve its size
srf:FillRectangle(0,0, w,h)
ftxt = SelFont.create("/usr/local/fonts/corpuscare_light.ttf", { height=25} )
fdigit = SelFont.create("/usr/local/fonts/corpuscare_light.ttf", { height=80} )

srf:SetFont( ftxt )
srf:SetColor( 0x80, 0xff, 0x80, 0xff );
srf:DrawString("Salon :", 15,20)
tsalonoff = 20 + ftxt:StringWidth("Salon :")

-- Wait for events
while true do
	ret, err = Selene.WaitFor()

	if type(ret) == 'function' then
		ret()
	end
end
